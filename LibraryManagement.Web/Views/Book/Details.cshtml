@inject UserManager<IdentityUser> UserManager
@using LibraryManagement.Web.ViewModels.Book
@model BookDetailsViewModel


@{
    ViewData["Title"] = "Book Details";
}

<h2>@Model.Title</h2>

<div class="book-details">
    <dl class="row">
        <dt class="col-sm-2">Author</dt>
        <dd class="col-sm-10">@Model.AuthorName</dd>

        <dt class="col-sm-2">Genre</dt>
        <dd class="col-sm-10">@Model.Genre</dd>

        <dt class="col-sm-2">Published Date</dt>
        <dd class="col-sm-10">@Model.PublishedDate.ToString("MMMM dd, yyyy")</dd>

        <dt class="col-sm-2">Description</dt>
        <dd class="col-sm-10">@Model.Description</dd>

        @if (!string.IsNullOrEmpty(Model.ImageUrl))
        {
            <dt class="col-sm-2">Cover</dt>
            <dd class="col-sm-10">
                <img src="@Model.ImageUrl" alt="Cover image for @Model.Title" class="img-fluid" style="max-width:200px;" />
            </dd>
        }
    </dl>
</div>

<a asp-action="Index" class="btn btn-primary">Back to All Books</a> 
@if (User.Identity?.IsAuthenticated == true)
{
    var currentUserId = UserManager.GetUserId(User);
    if (currentUserId == Model.CreatorId)
    {
        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning ms-2">Edit</a>
    }
}
